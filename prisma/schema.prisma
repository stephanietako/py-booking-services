// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
// üèó R√©sum√© du fonctionnement
// 1Ô∏è‚É£ L'admin g√®re la base de services (Service).
// 2Ô∏è‚É£ L‚Äôutilisateur choisit un service et effectue une r√©servation (Booking).
// 3Ô∏è‚É£ Chaque Booking stocke quel utilisateur (userId) a r√©serv√© quel service (serviceId).
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String    @id @default(uuid())
  email       String
  name        String
  image       String?
  description String?
  clerkUserId String    @unique
  roleId      String
  createdAt   DateTime  @default(now())
  bookings    Booking[] // Un utilisateur peut avoir plusieurs r√©servations
  role        Role      @relation(fields: [roleId], references: [id])
}

model Role {
  id    String @id @default(uuid())
  name  String @unique
  users User[]
}

model Service {
  id           String        @id @default(uuid())
  name         String
  amount       Float
  categories   String[] // Changement pour un tableau de cat√©gories
  description  String?
  imageUrl     String
  active       Boolean       @default(true)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  transactions Transaction[]
  bookings     Booking[]
}

model Transaction {
  id          String    @id @default(uuid())
  description String
  amount      Float
  serviceId   String?
  service     Service?  @relation(fields: [serviceId], references: [id])
  createdAt   DateTime  @default(now())
  Booking     Booking[]
}

model ClosedDay {
  id   String   @id @default(cuid())
  date DateTime @unique
}

model Day {
  id        String @id @default(cuid())
  name      String // monday, tuesday, ...
  dayOfWeek Int // @see getDay() documentation, 0 for Sunday, 1 for Monday, ...
  openTime  String
  closeTime String
}

model Booking {
  id           String        @id @default(uuid())
  userId       String
  serviceId    String
  user         User          @relation(fields: [userId], references: [id])
  service      Service       @relation(fields: [serviceId], references: [id])
  createdAt    DateTime      @default(now())
  transactions Transaction[]
}
